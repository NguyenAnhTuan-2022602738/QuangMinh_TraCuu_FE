import React, { useState } from 'react';
import { useCustomer } from '../context/CustomerContext';
import axios from 'axios';
import './ProductSearch.css';

const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';

const ProductSearch = () => {
    const { customerType } = useCustomer();
    const [searchTerm, setSearchTerm] = useState('');
    const [searchResults, setSearchResults] = useState([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState('');
    const [hasSearched, setHasSearched] = useState(false);

    const handleSearch = async (e) => {
        e.preventDefault();
        if (!searchTerm.trim()) {
            setError('Vui l√≤ng nh·∫≠p m√£ ho·∫∑c t√™n s·∫£n ph·∫©m');
            return;
        }

        try {
            setLoading(true);
            setError('');
            setHasSearched(true);
            
            // Fetch all products with current price type
            const response = await axios.get(`${API_URL}/products/${customerType}`);
            const allProducts = response.data;
            
            // Filter by search term
            const filtered = allProducts.filter(p => 
                (p.code && String(p.code).toLowerCase().includes(searchTerm.toLowerCase())) ||
                (p.name && String(p.name).toLowerCase().includes(searchTerm.toLowerCase()))
            );
            
            setSearchResults(filtered);
        } catch (err) {
            setError('Kh√¥ng th·ªÉ t√¨m ki·∫øm s·∫£n ph·∫©m. Vui l√≤ng th·ª≠ l·∫°i.');
            console.error('Search error:', err);
        } finally {
            setLoading(false);
        }
    };

    const formatPrice = (price) => {
        if (price == null) return 'Li√™n h·ªá';
        return new Intl.NumberFormat('vi-VN', {
            style: 'currency',
            currency: 'VND'
        }).format(price);
    };

    return (
        <div className="product-search">
            <div className="container">
                <div className="search-header">
                    <h1>Tra c·ª©u s·∫£n ph·∫©m</h1>
                    <p className="search-subtitle">
                        T√¨m ki·∫øm s·∫£n ph·∫©m theo m√£ ho·∫∑c t√™n ‚Ä¢ Gi√° hi·ªán t·∫°i: <strong>{customerType}</strong>
                    </p>
                </div>

                <div className="search-box-wrapper card">
                    <form onSubmit={handleSearch} className="search-form">
                        <div className="search-input-group">
                            <input
                                type="text"
                                value={searchTerm}
                                onChange={(e) => setSearchTerm(e.target.value)}
                                placeholder="Nh·∫≠p m√£ s·∫£n ph·∫©m ho·∫∑c t√™n s·∫£n ph·∫©m..."
                                className="search-input-large"
                            />
                            <button 
                                type="submit" 
                                className="btn btn-primary search-btn"
                                disabled={loading}
                            >
                                {loading ? 'ƒêang t√¨m...' : 'üîç T√¨m ki·∫øm'}
                            </button>
                        </div>
                    </form>
                </div>

                {error && (
                    <div className="error-message">{error}</div>
                )}

                {hasSearched && !loading && (
                    <div className="search-results">
                        <div className="results-header">
                            <h2>K·∫øt qu·∫£ t√¨m ki·∫øm</h2>
                            <span className="results-count">
                                {searchResults.length} s·∫£n ph·∫©m
                            </span>
                        </div>

                        {searchResults.length === 0 ? (
                            <div className="no-results card">
                                <div className="no-results-icon">üîç</div>
                                <h3>Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m</h3>
                                <p>Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o kh·ªõp v·ªõi t·ª´ kh√≥a "{searchTerm}"</p>
                                <p>Vui l√≤ng th·ª≠ v·ªõi t·ª´ kh√≥a kh√°c</p>
                            </div>
                        ) : (
                            <div className="results-grid">
                                {searchResults.map(product => (
                                    <div key={product.code} className="result-card card">
                                        <div className="result-header">
                                            <span className="result-code">{product.code}</span>
                                            <span className="result-category">{product.category}</span>
                                        </div>
                                        <h3 className="result-name">{product.name}</h3>
                                        <div className="result-footer">
                                            <div className="result-unit">
                                                <span className="label">ƒê∆°n v·ªã:</span>
                                                <span className="value">{product.unit}</span>
                                            </div>
                                            <div className="result-price">
                                                {formatPrice(product.price)}
                                            </div>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        )}
                    </div>
                )}

                {!hasSearched && !loading && (
                    <div className="search-tips card">
                        <h3>üí° M·∫πo t√¨m ki·∫øm</h3>
                        <ul>
                            <li>Nh·∫≠p m√£ s·∫£n ph·∫©m ch√≠nh x√°c ƒë·ªÉ t√¨m nhanh nh·∫•t</li>
                            <li>Ho·∫∑c nh·∫≠p t√™n s·∫£n ph·∫©m ƒë·ªÉ t√¨m t·∫•t c·∫£ s·∫£n ph·∫©m li√™n quan</li>
                            <li>K·∫øt qu·∫£ s·∫Ω hi·ªÉn th·ªã gi√° theo lo·∫°i kh√°ch h√†ng b·∫°n ƒë√£ ch·ªçn</li>
                            <li>Thay ƒë·ªïi lo·∫°i gi√° ·ªü g√≥c tr√™n b√™n ph·∫£i ƒë·ªÉ xem gi√° kh√°c</li>
                        </ul>
                    </div>
                )}
            </div>
        </div>
    );
};

export default ProductSearch;